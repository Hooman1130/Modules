{
    "moduleName": "GoGoAnime",
    "moduleInitials": "GGA",
    "moduleDesc": "Module For GoGoAnime Website",
    "developer": "Uknown",
    "moduleID": "2",
    "moduleImage": "https://techiestechguide.com/wp-content/uploads/2019/01/Untitled-1.png",
    "moduleVersion": "2.0",
    "moduleLenguage": "ENG",
    "moduleHasVideos": "true",
    "randomizeUserAgent": "false",
    "baseURL": "https://gogoanime.sh/",
    "mainPageLeftTitle": "Last Episodes",
    "mainPageRightTitle": "Last Animes",
    "blackListed": [""],
    "mainPage": [
        {
            "request": "https://gogoanime.sh/new-season.html",
            "method": "get",
            "headers": [{ "key": "", "value": "" }],
            "extraInfo": [{ "value": "" }],
            "loadJavascript": "false",
            "javaScript": "   function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(lastEpisodes,lastAnimes) { this.lastEpisodes = lastEpisodes; this.lastAnimes = lastAnimes; } function LastAnimes(moduleID,image,link,title) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; } function LastEpisodes(moduleID,image,link,title,episode) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.episode = episode; } function MainPageObject(request,headers,method,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.headers = headers; this.method = method; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var moduleID = '2'; var mainPageObject; var output; var headers = []; var lastAnimes = []; var lastEpisodes = []; var extraInfo = []; var savedData = document.getElementById('katsu-final-data'); var eps = document.querySelector('.menu_recent').querySelectorAll('li'); for (var i = 0; i < eps.length; ++i) { var link = eps[i].querySelector('a').href; var image = eps[i].querySelector('div').getAttribute('style'); image = image.split('\\'')[1]; var title = eps[i].querySelector('a').href.split('/').join('').split('-').join(' '); if (title.includes('episode')) { title = title.split('episode')[0]; } var episode = eps[i].querySelector('p').innerText; var episode = new LastEpisodes(moduleID,image,'https://gogoanime.sh'+link,title,episode); lastEpisodes.push(episode); } var animes = document.querySelector('.items').querySelectorAll('li'); for (var i = 0; i < animes.length; ++i) { var link = animes[i].querySelector('a').href; var image = animes[i].querySelector('img').src; var title = animes[i].querySelector('a').title; var anime = new LastAnimes(moduleID,image,'https://gogoanime.sh' + link,title); lastAnimes.push(anime); } while (lastAnimes.length % 3 != 0) { lastAnimes.push(lastAnimes[0]); } output = new Output(lastEpisodes,lastAnimes); headers.push(new Header('','')); extraInfo.push(new ExtraInfo('')); mainPageObject = new MainPageObject('',headers,'',extraInfo,'','',output); var finalJson = JSON.stringify(mainPageObject); savedData.innerHTML = finalJson;",
            "output": { "lastEpisodes": [{ "moduleID": "0", "image": "", "link": "", "title": "", "episode": "" }], "lastAnimes": [{ "moduleID": "0", "image": "", "link": "", "title": "" }] }
        }
    ],
    "search": [
        {
            "request": "https://gogoanime.sh//search.html?keyword=<searched>&page=<page>",
            "method": "get",
            "headers": [{ "key": "", "value": "" }],
            "separator": "+",
            "extraInfo": [{ "value": "" }],
            "loadJavascript": "false",
            "javaScript": " function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(moduleID,image,link,title,type,voice,stars) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.type = type; this.voice = voice; this.stars = stars; } function SearchObject(request,method,headers,separator,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.separator = separator; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } function getType(title) { if (title.includes('Dub')) { return 'Dub'; } return 'Sub'; } var moduleID = '2'; var searchPageObject; var output = []; var headers = []; var extraInfo = []; var savedData = document.getElementById('katsu-final-data'); var animes = document.querySelector('.items').querySelectorAll('li'); for (var i = 0; i < animes.length; ++i) { var link = animes[i].querySelector('a').href; link = link.replace('file://').replace('undefined' , ''); var image = animes[i].querySelector('img').src; var title = animes[i].querySelector('a').title; var anime = new Output(moduleID,image,'https://gogoanime.sh'+link,title,'Anime',getType(title),'★★★★★'); output.push(anime); } headers.push(new Header('','')); extraInfo.push(new ExtraInfo('')); searchPageObject = new SearchObject('','',headers,'+',extraInfo,'','',output); var finalJson = JSON.stringify(searchPageObject); savedData.innerHTML = finalJson;",
            "output": [{ "moduleID": "0", "image": "", "link": "", "title": "", "type": "", "voice": "", "stars": "" }]
        }
    ],
    "info": [
        {
            "request": "get",
            "method": "get",
            "headers": [{ "key": "", "value": "" }],
            "extraInfo": [{ "value": "" }],
            "loadJavascript": "false",
            "javaScript": " function Header(key, value) { this.key = key; this.value = value;}function ExtraInfo(value) { this.value = value;}function Output(moduleID, image, link, title, description, genres, type, status, episodes) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.type = type; this.status = status; this.episodes = episodes;}function Episodes(link, moduleID, isDecodable) { this.link = link; this.moduleID = moduleID; this.isDecodable = isDecodable;}function InfoObject(request, method, headers, extraInfo, loadJavascript, javaScript, output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output;}var savedData = document.getElementById('katsu-final-data');var moduleID = '2';var infoObject;var output;var headers = [];var extraInfo = [];var episodes = [];var type = ' ';var status = '';var genres = [];var desc = '';var parsedJson = JSON.parse(savedData.innerHTML);var animeInfo = document.querySelector('.anime_info_body');var title = animeInfo.querySelector('h1').innerText;var image = animeInfo.querySelector('img').src;var forData = document.querySelectorAll('.type');for (var x = 0; x < forData.length; x++) { var text = '' + forData[x].innerText; if (text.includes('Type: ')) { type = text.replace('Type: ').replace('undefined', ''); } if (text.includes('Genre: ')) { var gen = forData[x].querySelectorAll('a'); for (var y = 0; y < gen.length; y++) { genres.push(gen[y].innerText.replace(',', '')); } } if (text.includes('Plot Summary: ')) { desc = text.replace('Plot Summary: ').replace('undefined', ''); } if (text.includes('Status: ')) { status = text.replace('Status: ', ''); }}var chapters = document.querySelector('.active').getAttribute('ep_end');var chaptersInt = parseInt(chapters);for (var x = 0; x < chaptersInt; x++) { var fixedLink = '' + parsedJson.request; fixedLink = fixedLink.replace('category/', '') + '-episode-' + (x + 1); episodes.push(new Episodes(fixedLink, moduleID, 'false'));}output = new Output(moduleID, image, parsedJson.request, title, desc, genres, type, status, episodes);extraInfo.push(new ExtraInfo(''));headers.push(new Header('', ''));infoObject = new InfoObject('', 'get', headers, extraInfo, '', '', output);var finalJson = JSON.stringify(infoObject);savedData.innerHTML = finalJson;",
            "output": { "moduleID": "0", "image": "", "link": "", "title": "", "description": "", "genres": [""], "type": "", "status": "", "episodes": [{ "link": "", "moduleID": "", "isDecodable": "false" }] }
        }
    ],
    "episodes": [
        {
            "request": "empty",
            "method": "get",
            "headers": [{ "key": "key", "value": "value" }],
            "extraInfo": [{ "value": "" }],
            "loadJavascript": "false",
            "javaScript": "function Header(key, value) { this.key = key; this.value = value;}function ExtraInfo(value) { this.value = value;}function Output(link, linkIdentifier, moduleID, isDecodable, headers) { this.link = link; this.linkIdentifier = linkIdentifier; this.moduleID = moduleID; this.isDecodable = isDecodable; this.headers = headers;}function EpisodeObject(request, method, headers, extraInfo, loadJavascript, javaScript, output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output;}var moduleID = '2';var episodeObject;var output = [];var headers = [];var extraInfo = [];var videoHeaders = [new Header('', '')];var savedData = document.getElementById('katsu-final-data');var data = document.querySelector('.anime_muti_link').querySelectorAll('a');for (var x = 0; x < data.length; x++) { var link = data[x].getAttribute('data-video'); if (link != null) { if (!link.includes('https:') && link.includes('vidstreaming')) { output.push(new Output('https:' + link, '', moduleID, 'false', videoHeaders)); } else { var http = ''; if (!link.includes('http')) { http = 'https:'; } if (link == '') { break; } if (link.includes('streamtape.com')) { link = link.replace('streamtape.com','streamta.pe') } output.push(new Output(http + link, '', moduleID, 'false', videoHeaders)); } }}headers.push(new Header('', ''));extraInfo.push(new ExtraInfo(''));episodeObject = new EpisodeObject('', '', headers, extraInfo, '', '', output);var finalJson = JSON.stringify(episodeObject);savedData.innerHTML = finalJson;",
            "output": [{ "link": "", "linkIdentifier": "", "moduleID": "", "isDecodable": "false", "headers": [{ "key": "key", "value": "value" }] }]
        }
    ]
}
